{"ast":null,"code":"var _jsxFileName = \"/home/junaid/DiskD/test/sampletemplate/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useEffect, useState } from \"react\";\nimport { connect, useSelector } from 'react-redux';\nimport { getAlbums } from '../redux-store/actions/album';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomePage(props) {\n  _s();\n\n  const [albumsList, setalbumsList] = useState();\n  useEffect(() => {\n    props.dispatch(getAlbums());\n  }, []);\n  useSelector(state => {\n    console.log(state);\n    console.log(state.album);\n\n    if (state.album.albumData !== albumsList && state.album && state.album.isGetAlbum === \"FULFILLED\") {\n      console.log(state.album.albumData);\n      setalbumsList(state.album.albumData && state.album.albumData);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Select Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), albumsList && albumsList.map(item => {\n        /*#__PURE__*/\n        _jsxDEV(\"option\", {\n          value: item.id,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomePage, \"675mYr78Z6tOvMr4+WJCtBnLsbg=\", false, function () {\n  return [useSelector];\n});\n\n_c = HomePage;\nexport default connect(store => ({\n  album: store.album\n}))(HomePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/junaid/DiskD/test/sampletemplate/src/pages/home.js"],"names":["Component","useEffect","useState","connect","useSelector","getAlbums","HomePage","props","albumsList","setalbumsList","dispatch","state","console","log","album","albumData","isGetAlbum","map","item","id","title","store"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,SAAT,QAA0B,8BAA1B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,EAA5C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACG,QAAN,CAAeL,SAAS,EAAxB;AACH,GAFQ,EAEN,EAFM,CAAT;AAGAD,EAAAA,WAAW,CAACO,KAAK,IAAI;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;;AACA,QAAIH,KAAK,CAACG,KAAN,CAAYC,SAAZ,KAA0BP,UAA1B,IAAwCG,KAAK,CAACG,KAA9C,IAAuDH,KAAK,CAACG,KAAN,CAAYE,UAAZ,KAA2B,WAAtF,EAAmG;AAC/FJ,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAN,CAAYC,SAAxB;AACAN,MAAAA,aAAa,CAACE,KAAK,CAACG,KAAN,CAAYC,SAAZ,IAAyBJ,KAAK,CAACG,KAAN,CAAYC,SAAtC,CAAb;AACH;AACJ,GAPU,CAAX;AASA,sBAEI;AAAA,2BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKP,UAAU,IAAIA,UAAU,CAACS,GAAX,CAAgBC,IAAD,IAAU;AACpC;AAAA;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACC,EAApB;AAAA,oBAAyBD,IAAI,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA;AACH,OAFc,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaH;;GA3BQd,Q;UAKLF,W;;;KALKE,Q;AA4BT,eAAeH,OAAO,CAACkB,KAAK,KAAK;AAC7BP,EAAAA,KAAK,EAAEO,KAAK,CAACP;AADgB,CAAL,CAAN,CAAP,CAEXR,QAFW,CAAf","sourcesContent":["import { Component, useEffect, useState } from \"react\";\nimport { connect, useSelector } from 'react-redux'\nimport { getAlbums } from '../redux-store/actions/album'\n\nfunction HomePage(props) {\n    const [albumsList, setalbumsList] = useState()\n    useEffect(() => {\n        props.dispatch(getAlbums())\n    }, [])\n    useSelector(state => {\n        console.log(state)\n        console.log(state.album)\n        if (state.album.albumData !== albumsList && state.album && state.album.isGetAlbum === \"FULFILLED\") {\n            console.log(state.album.albumData)\n            setalbumsList(state.album.albumData && state.album.albumData)\n        }\n    })\n\n    return (\n\n        <div>\n            <select >\n                <option>Select Album</option>\n                {albumsList && albumsList.map((item) => {\n                    <option value={item.id}>{item.title}</option>\n                })}\n            </select>\n        </div>\n\n    )\n\n}\nexport default connect(store => ({\n    album: store.album\n}))(HomePage)"]},"metadata":{},"sourceType":"module"}