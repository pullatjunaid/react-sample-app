{"ast":null,"code":"var _jsxFileName = \"/home/junaid/DiskD/test/react-sample-app/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getAlbums } from '../redux-store/actions/album';\nimport { getPhotos } from '../redux-store/actions/photos';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport Select from '@mui/material/Select';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomePage(props) {\n  _s();\n\n  // const [albumsList, setalbumsList] = useState([])\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const albumsList = useSelector(state => state.album.albumData);\n  const photosList = useSelector(state => state.photo.photoData);\n  const [filteredPhotoList, setFilteredPhotoList] = useState([]);\n  const [selectedAlbum, setselectedAlbum] = useState('');\n  const [isAlbumError, setIsAlbumError] = useState(false);\n  useEffect(() => {\n    dispatch(getAlbums());\n    dispatch(getPhotos());\n    console.log(selector);\n  }, []);\n\n  const onChangeAlbum = evnt => {\n    setselectedAlbum(evnt.target.value);\n    setFilteredPhotoList([]);\n    let tempList = [];\n    photosList.map(val => {\n      if (val.albumId == evnt.target.value) return tempList.push(val);\n    });\n    setFilteredPhotoList(tempList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [\"  \", selector.album.isGetAlbum === \"PENDING\" || selector.photo.isGetPhoto === \"PENDING\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          className: \"spinner\",\n          animation: \"grow\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n          className: \"spinner\",\n          animation: \"grow\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n          className: \"spinner\",\n          animation: \"grow\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      class: \"select-album-hd\",\n      children: \"Select Album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select-box\",\n      onChange: onChangeAlbum,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), albumsList && albumsList.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.id,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 22\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"error-message-select\",\n      children: !selectedAlbum ? `No photo associated with the selected Album` : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: {\n          xs: 2,\n          md: 3\n        },\n        columns: {\n          xs: 4,\n          sm: 8,\n          md: 24\n        },\n        children: filteredPhotoList && filteredPhotoList.map((photo, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 4,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"200\",\n              image: photo.url,\n              alt: photo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body-area\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Photo ID: \", photo.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-body-area-text\",\n                children: photo.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomePage, \"L91IiCCuPoZJSyxyVm96LUuxn0I=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/junaid/DiskD/test/react-sample-app/src/pages/home.js"],"names":["Component","useEffect","useState","connect","useDispatch","useSelector","getAlbums","getPhotos","experimentalStyled","styled","Box","Paper","Grid","Card","CardMedia","Select","OutlinedInput","MenuItem","Spinner","HomePage","props","dispatch","selector","state","albumsList","album","albumData","photosList","photo","photoData","filteredPhotoList","setFilteredPhotoList","selectedAlbum","setselectedAlbum","isAlbumError","setIsAlbumError","console","log","onChangeAlbum","evnt","target","value","tempList","map","val","albumId","push","isGetAlbum","isGetPhoto","item","id","title","xs","md","sm","index","url"],"mappings":"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","sourcesContent":["import { Component, useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport { getAlbums } from '../redux-store/actions/album'\nimport { getPhotos } from '../redux-store/actions/photos'\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport Select from '@mui/material/Select';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Spinner } from \"react-bootstrap\";\n\nfunction HomePage(props) {\n    // const [albumsList, setalbumsList] = useState([])\n    const dispatch = useDispatch()\n    const selector = useSelector(state => state)\n    const albumsList = useSelector(state => state.album.albumData)\n    const photosList = useSelector(state => state.photo.photoData)\n    const [filteredPhotoList, setFilteredPhotoList] = useState([])\n    const [selectedAlbum, setselectedAlbum] = useState('')\n    const [isAlbumError, setIsAlbumError] = useState(false)\n    useEffect(() => {\n        dispatch(getAlbums())\n        dispatch(getPhotos())\n        console.log(selector)\n    }, [])\n\n    const onChangeAlbum = (evnt) => {\n        setselectedAlbum(evnt.target.value);\n        setFilteredPhotoList([])\n        let tempList = []\n        photosList.map((val) => {\n            if (val.albumId == evnt.target.value) return tempList.push(val)\n        })\n        setFilteredPhotoList(tempList);\n    }\n\n    return (\n\n        <div class=\"main-container\">\n            <div className=\"loading\">  {selector.album.isGetAlbum === \"PENDING\" || selector.photo.isGetPhoto === \"PENDING\" ?\n                <div>\n                    <Spinner className=\"spinner\" animation=\"grow\" size=\"sm\" />\n                    <Spinner className=\"spinner\" animation=\"grow\" size=\"sm\" />\n                    <Spinner className=\"spinner\" animation=\"grow\" size=\"sm\" />\n                </div>\n                : ''}</div>\n\n            <label class=\"select-album-hd\">Select Album</label>\n\n            <select className=\"select-box\" onChange={onChangeAlbum} >\n                <option value=\"\">Select Album</option>\n                {albumsList && albumsList.map((item) =>\n                    (<option value={item.id}>{item.title}</option>)\n                )}\n            </select>\n\n            <div class=\"error-message-select\">{!selectedAlbum ? `No photo associated with the selected Album` : ''}</div>\n\n            <div>\n                <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 24 }}>\n                    {filteredPhotoList && filteredPhotoList.map((photo, index) => (\n                        <Grid item xs={2} sm={4} md={4} key={index}>\n                            <Card >\n                                <CardMedia\n                                    component=\"img\"\n                                    height=\"200\"\n                                    image={photo.url}\n                                    alt={photo.title}\n                                />\n                                <div className=\"card-body-area\">\n                                    <h3>Photo ID: {photo.id}</h3>\n                                    <p className=\"card-body-area-text\">{photo.title}</p>\n                                </div>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </div>\n        </div>\n\n    )\n\n}\nexport default HomePage"]},"metadata":{},"sourceType":"module"}